// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using MvvmCross.Binding.BindingContext;
using MvvmCross.Binding.iOS.Views;
using CoreGraphics;
using RangeSlider;
using System.Linq;

namespace ThisRoofN.iOS
{
	public partial class HomeDetailModalView : BaseModalView
	{
		private RangeSliderView squareSlider;
		private RangeSliderView homeAgeSlider;
		private RangeSliderView lotSizeSlider;

		public HomeDetailModalView (IntPtr handle) : base (handle)
		{
		}

		public HomeDetailModalViewModel ViewModelInstance {
			get {
				return (HomeDetailModalViewModel)base.ViewModel;
			}
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			InitRangeSlider ();

			// Bind Item Tableview source
			var source = new HomeDetailItemsTableViewSource (this, tbl_homeDetail);
			tbl_homeDetail.Source = source;
			tbl_homeDetail.RowHeight = UITableView.AutomaticDimension;
			tbl_homeDetail.TableFooterView = new UITableView (CGRect.Empty);
			tbl_homeDetail.SeparatorStyle = UITableViewCellSeparatorStyle.None;
			tbl_homeDetail.ReloadData ();

			var bindingSet = this.CreateBindingSet<HomeDetailModalView, HomeDetailModalViewModel> ();
			bindingSet.Bind (btn_modalBack).To (vm => vm.ModalCloseCommand);
			bindingSet.Bind (source).To (vm => vm.Items);

			bindingSet.Bind (squareSlider).For ("LeftValueChange").To (vm => vm.MinSquareFootage);
			bindingSet.Bind (squareSlider).For ("RightValueChange").To (vm => vm.MaxSquareFootage);
			bindingSet.Bind (homeAgeSlider).For ("LeftValueChange").To (vm => vm.MinAge);
			bindingSet.Bind (homeAgeSlider).For ("RightValueChange").To (vm => vm.MaxAge);
			bindingSet.Bind (lotSizeSlider).For ("LeftValueChange").To (vm => vm.MinLotSize);
			bindingSet.Bind (lotSizeSlider).For ("RightValueChange").To (vm => vm.MaxLotSize);

			bindingSet.Bind (lbl_squareFootage).To (vm => vm.SquareFootageString);
			bindingSet.Bind (lbl_homeAge).To (vm => vm.AgeString);
			bindingSet.Bind (lbl_lotSize).To (vm => vm.LotSizeString);
			bindingSet.Apply ();
		}

		private void InitRangeSlider ()
		{
			squareSlider = new RangeSliderView (new CGRect (0, 0, this.view_rangeSliderSquare.Frame.Width, this.view_rangeSliderSquare.Frame.Height));
			squareSlider.MinValue = 0;
			squareSlider.MaxValue = TRConstant.SquareFootageOptions.Count - 1;
			this.view_rangeSliderSquare.AddSubview (squareSlider);

			homeAgeSlider = new RangeSliderView (new CGRect (0, 0, this.view_rangeSliderHomeAge.Frame.Width, this.view_rangeSliderHomeAge.Frame.Height));
			homeAgeSlider.MinValue = 0;
			homeAgeSlider.MaxValue = TRConstant.HomeAgeOptions.Count - 1;
			this.view_rangeSliderHomeAge.AddSubview (homeAgeSlider);

			lotSizeSlider = new RangeSliderView (new CGRect (0, 0, this.view_rangeSliderLotSize.Frame.Width, this.view_rangeSliderLotSize.Frame.Height));
			lotSizeSlider.MinValue = 0;
			lotSizeSlider.MaxValue = TRConstant.MaxLotSizeOptions.Count - 1;
			this.view_rangeSliderLotSize.AddSubview (lotSizeSlider);
		}

		public class HomeDetailItemsTableViewSource : MvxTableViewSource
		{
			private HomeDetailModalView masterView;
			public HomeDetailItemsTableViewSource (HomeDetailModalView _masterView, UITableView tv) : base (tv)
			{
				masterView = _masterView;
			}

			public override nfloat GetHeightForRow (UITableView tableView, NSIndexPath indexPath)
			{
				return 60.0f;
			}

			protected override UITableViewCell GetOrCreateCellFor (UITableView tableView, NSIndexPath indexPath, object item)
			{
				HomeDetailItemCell cell = (HomeDetailItemCell)tableView.DequeueReusableCell (HomeDetailItemCell.Identifier);
				return cell;
			}

			public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
			{
				tableView.DeselectRow (indexPath, true);
				masterView.ViewModelInstance.Items [indexPath.Row].Selected = !masterView.ViewModelInstance.Items [indexPath.Row].Selected;
			}
		}
	}
}
