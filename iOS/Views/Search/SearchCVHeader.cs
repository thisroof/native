// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using CoreGraphics;
using AllianceCustomPicker;
using System.Linq;

namespace ThisRoofN.iOS
{
	public partial class SearchCVHeader : UICollectionReusableView
	{
		private TRMovingLabelRangeSlider mPriceRangeSlider;

		public SearchCVHeader (IntPtr handle) : base (handle)
		{
		}

		public TRMovingLabelRangeSlider PriceRangeSlider 
		{
			get {
				return mPriceRangeSlider;
			}
		}

		public UIView PriceRangeView
		{
			get {
				return view_priceRange;
			}
		}

		public void InitView(SearchView masterView)
		{
			if (this.view_priceRange.Subviews.Length == 0) {
				mPriceRangeSlider = new TRMovingLabelRangeSlider (
					new CGRect (0, 0, this.view_priceRange.Frame.Width, this.view_priceRange.Frame.Height), 
					0, 
					TRConstant.PriceStringValues.Count - 1);

				this.view_priceRange.AddSubview (mPriceRangeSlider);

				AlliancePicker picker = new AlliancePicker(masterView);
				picker.PlainPickerItems = TRConstant.SortTypes.Values.ToList();
				picker.SourceField = txt_sortBy;
				picker.Type = PickerType.List;
				picker.HeaderTitle = "Choose Sort By";
				picker.View.Layer.CornerRadius = 5.0f;

				btn_sortBy.TouchUpInside += (object sender, EventArgs e) => {
					picker.Show();
				};
					
				masterView.BindingSet.Bind(mPriceRangeSlider.minLabel).To (vm => vm.MinBudgetString);
				masterView.BindingSet.Bind(mPriceRangeSlider.maxLabel).To (vm => vm.MaxBudgetString);
				masterView.BindingSet.Bind(mPriceRangeSlider.rangeSlider).For ("LeftValueChange").To (vm => vm.MinBudget);
				masterView.BindingSet.Bind(mPriceRangeSlider.rangeSlider).For ("RightValueChange").To (vm => vm.MaxBudget);
				masterView.BindingSet.Bind (txt_sortBy).To (vm => vm.SelectedSortType);
				masterView.BindingSet.Apply ();
			}
		}
	}
}
